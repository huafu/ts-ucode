{
	"parser": "@typescript-eslint/parser",
	"plugins": [
		"@typescript-eslint",
		"prettier",
		"import"
	],
	"extends": [
		"eslint:recommended",
		"plugin:prettier/recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:import/recommended",
		"plugin:import/typescript"
	],
	"rules": {
		"prettier/prettier": [
			"error",
			{
				"useTabs": false,
				"tabWidth": 2
			}
		],
		"use-isnan": "off",
		"prefer-const": "off", //["warn", { "ignoreReadBeforeAssign": true }],
		"no-empty": [
			"error",
			{
				"allowEmptyCatch": true
			}
		],
		"no-mixed-spaces-and-tabs": [
			"error",
			"smart-tabs"
		],
		"no-use-before-define": "off",
		"@typescript-eslint/no-use-before-define": [
			"error",
			{
				"ignoreTypeReferences": true
			}
		],
		"no-unused-vars": "off",
		"@typescript-eslint/no-unused-vars": [
			"error",
			{
				"argsIgnorePattern": "^_",
				"varsIgnorePattern": "^_"
			}
		],
		"@typescript-eslint/no-explicit-any": "off",
		"@typescript-eslint/no-this-alias": "off",
		"@typescript-eslint/consistent-type-imports": "error",
		// turn on errors for missing imports
		"import/no-unresolved": [
			"error",
			{
				"ignore": [
					"uci",
					"ubus",
					"fs",
					"uloop",
					"math"
				]
			}
		],
		"import/default":"off",
		"import/no-named-as-default-member": "off",
		"import/order": [
			"error",
			{
				"groups": [
					"builtin", // Built-in imports (come from NodeJS native) go first
					"external", // <- External imports
					"internal", // <- Absolute imports
					[
						"sibling",
						"parent"
					], // <- Relative imports, the sibling and parent types they can be mingled together
					"index", // <- index imports
					"unknown" // <- unknown
				],
				"newlines-between": "always",
				"alphabetize": {
					/* sort in ascending order. Options: ["ignore", "asc", "desc"] */
					"order": "asc",
					/* ignore case. Options: [true, false] */
					"caseInsensitive": true
				}
			}
		]
	},
	"settings": {
		"import/resolver": {
			"typescript": {
				"project": "./tsconfig.json"
			}
		}
	}
}